<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>hello-react</groupId>
  <artifactId>hello-react</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  
  <name>hello-react Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>18</maven.compiler.source>
    <maven.compiler.target>18</maven.compiler.target>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>

    <pluginManagement>
      <plugins>

        <!-- Apparently fail should be false by default for > v3 -->
        <!-- Adding this fixed the 'unable to provision error', why? -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.3.2</version>
          <configuration>
            <warSourceDirectory>src/main/webapp/dist</warSourceDirectory>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <!-- Use the latest released version:
        https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
        <version>1.12.1</version> 
        
        <executions>

          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v14.10.1</nodeVersion>
              <!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
              <npmVersion>6.14.8</npmVersion>
            </configuration>           
          </execution>

          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>

          <execution>
            <id>npm build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build-webapp</arguments>
            </configuration>
          </execution>

        </executions>

        <configuration>
          <installDirectory>target</installDirectory>
          <workingDirectory>src/main/webapp</workingDirectory>
        </configuration>
      </plugin>

    </plugins>

    <finalName>hello-react</finalName>
  </build>
</project>
